行内事件
点击事件
行内加事件
.代表的
当遇到margin-left marginLeft

[获取元素]
	document.getElementById('id'); //值获取一个元素，不可以改变父级
	document.getElementsByTagName(‘标签名字’); //获取一组元素，可以改变父级
	document.getElementsByClassName('class名字'); //获取一组元素，可以改变父级不兼容ie8-
	document.getElementsByName('name名字');
[声明变量关键字]
	var 
	//
	/**/
	<!-- --> html
[单引号和双引号]
	单引号不能套用单引号
	双引号不能套用双引号
	
【事件函数触发时机】
	当这个事件被触发的时候
【js代码三要素】
	1、先获取
	2、加事件
	3、操作
【函数】
	声明函数的关键字
		function 函数名(){
		
		}
	函数不见括号不执行
普通函数定义
	function show(){
	
	}
事件函数定义
	oBtn.onclick = function(){
	
	}
匿名函数
	function(){
	
	}
变量严格区分大小写

window.onload //当页面加载完成 触发

for(){

}
//初始值
while(){

}

switch(){
	case 值：
		break；
	default
}

if(){

}else{

}

if(){

}else if(){

}else if(){

}else{

}
undefined 几种情况
	1、函数未传参
	2、函数没有返回值
	3、变量未定义
	4、变量未赋值
	5、只有return
	
false 几种情况	
	1/0
	2、空字符串 var str = '';
	3/null 
	4、NaN
	5、undefined
	6、false
数据类型
	number
	string
	boolean
		false&&true
	function
	object
	undefined
	
[] 和 . 的区别
	.后面不能加变量
	[]可以跟变量
	当遇到.的时候 可以用[]来代替
字符串与变量的区别
	变量没有引号
	字符串有引号
	
continue
	跳出此次循环继续执行
break
	跳出并且终止
	
数组
	var arr = [];
	
innerHTML 
	
number()
	var str = '18abc';
	var str = 'abc12';
parseInt()
	var str = '18abc';
	var str = 'abc12';
parseFloat()
	var str = '18abc';
	var str = 'abc12';
	
NaN  //NaN 永远不能与NaN isNaN();

	if(NaN == NaN){
		alert(1);
	}else{
		alert(2);
	}
获取非行间样式
	function getStyle(obj,sName){
		return obj.currentStyle?obj.currentStyle[sName]:getComputedStyle(obj,false)[sName];
	}
	
操作属性
	obj.getAttribute('属性名字');
	obj.setAttribute('属性名字','属性值');
	
运算符
	+ - * / %
	+= -= /= *= %= ++ --
	< > = <= >= != == === ！ 非（不是、取反）&& || 
	
	三目运算符
		条件 ？ 真 ：假；
	==只判断值 && === 判断值并且判断类型

局部变量 
	在函数体内声明的变量
	局部变量可以覆盖全局变量
	局部变量只能在局部生效
	局部的可以使用全局的变量
	全局的不能使用局部的
	var 干掉
全局变量

随机数
	Math.random(); //0-1之间的小数

	function rad(n,m){
		return parseInt(Math.random()*(m-n)+n);
	}
	
补零小函数
	function toDub(n){
		return n<10 ? '0'+n:''+n;
	}
	
日期对象
	var oDate = new Date();
	var Y=oDate.getFullYear();
	var M = oDate.getMonth()+1;
	var D = oDate.getDate();
	var H = oDate.getHours();
	var m = oDate.getMinutes();
	var s = oDate.getSeconds();
	//getDay();
	//setMonth();
	//setHours();
	document.write(Y+'年'+M+'月'+D+'日'+H+'时'+m+'分'+s+'秒');
定时器
	setTimeout(function(){},1000);
	clearTimeout(定时器名字);
	setInterval(function(){},1000);
	clearInterval(定时器名字);
	

	

	
	
	

		
	
	
	

	