正则：正则表达式  规则表达式
	描述了一件事规则

	跟字符串打交道

var reg=new RegExp(字符串规则，字符串选项);

选项：
i	ignore	 忽略大小写
g	global	 全局

var reg=/规则/选项;

str.search(规则);   和indexOf一模一样
str.match(规则);    匹配结果

转义：  \

\d	digital  数字 \D

量词：
+	若干 一次或者多次
-----------------------------------
过滤敏感词：替换

	str.replace(要，谁)
	str.replace(正则,谁);

或：
	js-> ||
	正则 -> |
替换成等量*？
	
	str.replace(正则,function(s){
		s
	});
-----------------------------------

修饰：
行首(开头)	^
行尾(结尾)	$

选项(模式)：
i	忽略大小写
g   全局
m	mutil-line   多行模式

/a/

/a/gim
/a/mgi
/a/img   √


^ 如果不配合m来用，整个字符串开头
^ 配合m来用，自动识别字符串换行(换段)
------------------------------------
方括号:  []
1. [abc]	任意一个	/a|b|c/
	/abc/
	/[abc]/

	/[a|b|c]/  a或者 | 或者b 或者 c
	/[a,b,c]/
2. [0-9]      区间    
	/[1-7]/
	/[a-z]/
	/[a-z0-9]/
	/[a-zA-Z]/

	/[1-38]/   1-3 或者 8

	/[09-]/   

3. [^abc]      排除
	
	/^a/  -> 以字母a开头的东西
	/[^a]/  -> 排除字母a
	/[^0-9]/
	/^[a-z]/  -> 以小写字母开头
	/^[^a-z]/ -> 以非小写字母开头

/[a-z0-9-]/


/\d/  /[0-9]/
/\d/
/\d\d/
/\d/ 
量词：规定了几个
{n}	正好几个	/\d{2}/
		/\d{475}/
		/\d{2}|\d{3}/
{n,m}   最少n个，最多m个
		/\d{1,2}/
		/\d{2,500}/
		/\d{0,1}/  -> 可有可无
{n,}    最少n个，最多不限
		/\d{2,}/
		/\d{1,}/   若干
		/\d{0,}/  

?	{0,1}   可有可无
	/\d{0,1}/
	/\d?/
+	{1,}    若干
	/\d{1,}/
	/\d+/
*	{0,}	可以没有，有了也不限
	/\d{0,}/
	/\d*/

* 量词，默认只管前面一位


/ab+/   abbbbb	√
/(ab)+/	ababab     分组

----/[a+]+/

转义： \
\d	ditital	   数字		[0-9]
\w	word	   单词	   	[a-zA-Z0-9_]
\s	space	   空白

\D	非数字	[^0-9]
\W	非单词	[^a-zA-Z0-9_]
\S	非空白

.	任意东西

\.	点本身
\\	斜杠本身
---------------------------------
校验匹配:
	
邮箱：
abc@abc.com
abc@abc.com.cn


用户名@一串字母或者数字.一串字母

用户名:
	\w+
	@
	[a-z0-9-]+
	(\.[a-z]{2,8}){1,2}

www.baidu.info

\w+@[a-z0-9-]+(\.[a-z]{2,8}){1,2}  .com.cn
	
reg.test(str)  校验， 字符串有一部分符合要求，返回true，否则false
	
	 ^  $ 配合

校验 QQ 号
	数字：
	[1-9]\d{4,10}
	[1-9][0-9]{4,10}

QQ邮箱：
	\w+@qq\.com
	[1-9]\d{4,10}@qq\.com
-------------------------------
座机：
010-88976543

区号：
	0[1-9]\d\d?
	(0[1-9]\d{1,2}-)?
号码：
	[2-8]\d{6,7}
	
(0[1-9]\d{1,2}-)?[2-8]\d{6,7}
-------------------------------
